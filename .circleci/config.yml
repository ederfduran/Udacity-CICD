version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd frontend && npm i
      - run: cd frontend && npm run build
      - save_cache:
          paths:
            - "/frontend/node_modules"
          key: "frontend-npm-packages"

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd backend && npm i
      - run: cd backend && npm run build
      - save_cache:
          paths:
            - "/backend/node_modules"
          key: "backend-npm-packages"

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - "frontend-npm-packages"
      - run: cd frontend && npm i
      # Collecting test metadata https://circleci.com/docs/2.0/collect-test-data/#jest
      - run:
          name: Install JUnit coverage reporter
          command: cd frontend && npm i jest-junit --save-dev
      - run:
          name: Run tests with JUnit as reporter
          command: cd frontend && jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - "backend-npm-packages"
      - run: cd backend && npm i
      # Collecting test metadata https://circleci.com/docs/2.0/collect-test-data/#jest
      - run:
          name: Install JUnit coverage reporter
          command: cd backend && npm i jest-junit --save-dev
      - run:
          name: Run tests with JUnit as reporter
          command: cd backend && jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/

#  can-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
